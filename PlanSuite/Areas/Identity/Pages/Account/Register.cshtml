@page
@using Microsoft.AspNetCore.Http.Extensions
@using PlanSuite.Utility
@model RegisterModel
@{
    ViewData["Title"] = "Register";
    int errorCode = UrlUtility.GetUrlRouteInt(HttpContext.Request, "error");
}

<div class="container register-div">
    @if (errorCode > 0)
    {
        string errorMessage = "An unknown error has occured.";
        switch (errorCode)
        {
            case 1:
                errorMessage = "The email you entered is already in use.";
                break;
            case 2:
                errorMessage = "The username you entered is already in use.";
                break;
        }
        <div class="ps-alert ps-alert-error mt-3"><i class="bi bi-exclamation-triangle"></i> @errorMessage</div>
    }

    <h1 class="register-header text-center">Welcome to Plan Suite</h1>
    <p class="register-subheading">By signing up, I agree to the Plan Suite <a class="ps-link-primary" asp-controller="Home" asp-action="License">Terms of Service</a> and <a class="ps-link-primary" asp-controller="Home" asp-action="License">Privacy Policy</a></p>

    <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="mb-3">
            <input asp-for="Input.Email" class="form-control" autocomplete="email" aria-required="true" placeholder="name@company.com" />
            <span asp-validation-for="Input.Email" class="text-danger"></span>
        </div>
        <button id="registerSubmit" type="submit" class="w-100 btn btn-lg ps-btn-primary">Sign Up</button>
    </form>
    @{
        <h5 class="text-center mb-3 mt-3">OR</h5>
        if ((Model.ExternalLogins?.Count ?? 0) > 0)
        {
            <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                <div>
                    <p>
                        @foreach (var provider in Model.ExternalLogins)
                        {
                            string style = string.Empty;
                            string icon = string.Empty;
                            if (provider.Name == "Facebook")
                            {
                                icon = "<i class=\"bi bi-facebook\"></i>";
                                style = "background-color: #4267b2; color: #FFF;";
                            }
                            <button type="submit" class="w-100 btn btn-lg ps-btn-primary" name="provider" value="@provider.Name" style="@style">@Html.Raw(icon) Continue with @provider.DisplayName</button>
                        }
                    </p>
                </div>
            </form>
        }
    }
    <p class="text-center mt-4">Already have an account? <a class="ps-link-primary" href="/Identity/Account/Login">Sign in.</a></p>

    @*<div class="register-card">
        <div class="row">
            <div class="col">
                
            </div>
        </div>
    </div>*@
</div>

@section Scripts {
    <environment exclude="Development">
    @{
        int isAd = UrlUtility.GetUrlRouteInt(HttpContext.Request, "ps-gad");
        if (isAd > 0)
        {
            <!-- Event snippet for Website traffic conversion page -->
            <script>gtag('event', 'conversion', { 'send_to': 'AW-1061717470/vqxnCNPjmNsDEN6LovoD' });</script>
        }
    }
    </environment>
    <partial name="_ValidationScriptsPartial" />
}
