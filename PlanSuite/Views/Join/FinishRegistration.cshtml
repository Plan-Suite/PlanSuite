@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model PlanSuite.Models.Temporary.FinishRegistrationModel
@{
    
}

<div class="container register-div">
    <div class="ps-alert ps-alert-error d-none" id="error"></div>
    @using (Html.BeginForm("ContinueRegistration", "Join", FormMethod.Post))
    {
        @Html.ValidationMessageFor(model => model.Input, "", new { @class="text-danger" })
        <input type="hidden" asp-for="Input.UserId" value="@Model.UserId" />
        <div id="part_1">
            <h1 class="register-header text-center">Welcome to Plan Suite!</h1>
            <p class="register-subheading-2">You're signing up as @Model.Email<text>.</text></p>
            <p class="register-subheading-3">What is your full name?</p>
            <div class="row">
                <div class="mb-3 col-md">
                    @Html.LabelFor(model => model.Input.FirstName, new { htmlAttributes = new { @class = "form-label" } })
                    @Html.EditorFor(model => model.Input.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Input.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3 col-md">
                    @Html.LabelFor(model => model.Input.LastName, new { htmlAttributes = new { @class = "form-label" } })
                    @Html.EditorFor(model => model.Input.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Input.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <button type="button" id="continueBtn" class="btn ps-btn-primary">Continue</button>
        </div>
        <div class="d-none" id="part_2">
            <p class="register-subheading-3">What password would you like to use?</p>
            <div class="mb-3">
                @Html.LabelFor(model => model.Input.Password, new { htmlAttributes = new { @class = "form-label" } })
                @Html.EditorFor(model => model.Input.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Input.Password, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.Input.ConfirmPassword, new { htmlAttributes = new { @class = "form-label" } })
                @Html.EditorFor(model => model.Input.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Input.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <button type="button" id="backBtn" class="btn ps-btn-secondary">Go Back</button>
                <button type="submit" class="btn ps-btn-primary">Let's go!</button>
            </div>
        </div>
    }
</div>

<script>
    var part1 = $("#part_1");
    var part2 = $("#part_2");
    var error = $("#error");

    var firstName = $("#Input_FirstName");
    var lastName = $("#Input_LastName");
    $("#continueBtn").click(function () {
        if (firstName.val().length > 0 && lastName.val().length > 0) {
            part1.addClass("d-none");
            part2.removeClass("d-none");
            error.addClass("d-none");
        }
        else {
            error.removeClass("d-none");
            error.text("You must input both your first name and last name.");
        }
    });

    var password = $("#Input_Password");
    var confirmPassword = $("#Input_ConfirmPassword");
    $("#backBtn").click(function () {
        part2.addClass("d-none");
        part1.removeClass("d-none");
        error.addClass("d-none");
    });
</script>