@using PlanSuite.Utility
@using System.Web
@model PlanSuite.Models.Temporary.ProjectViewModel
@{
    ViewData["Title"] = Model.Project.Name;
    int projectId = Model.Project.Id;
    int columnCount = Model.Columns.Count;
    int cardCount = Model.Cards.Count;
    string defaultCardDesc = "Click here to add a description.";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}


<input type="hidden" 
       id="RequestVerificationToken"
       name="RequestVerificationToken" 
       value="@GetAntiXsrfRequestToken()">


<script>
function isBlank(str){
    return (!!!str || /^\s*$/.test(str));
}

$(function () {
    $(".draggable").draggable({
        revert: "invalid"
    });

    $('.column').droppable({
        accept: '.draggable',
        drop: function (event, ui) {
            var dropped = ui.draggable;
            var droppedOn = $(this);
            $(dropped).detach().css({ top: 0, left: 0 }).appendTo(droppedOn);

            $.ajax({
                type: "POST",
                dataType: "json",
                contentType: "application/json",
                url: "/api/Project/movecard",
                beforeSend: function (request) {
                    request.setRequestHeader("RequestVerificationToken", $('#RequestVerificationToken').val());
                },
                data: JSON.stringify({ cardId: dropped[0].id, columnId: droppedOn[0].id }),
            });
        }
    });
});

function removeCard()
{
    const name = "#createCardDiv";
    $(name).off();
    $(name).addClass( "d-none" );
}

function removeEditForm()
{
    var dbId = $('#viewCardId').val();
    const name = "#viewCardEditText";
    $("#viewCardEditTextEditor").off();
    $(name).addClass( "d-none" );
    $("#viewCardText").removeClass( "d-none" );

    var text = $("#viewCardEditTextEditor").val();

    $("#viewCardText").text(text);

    $.ajax({
        type: "POST",
        dataType: "json",
        contentType: "application/json",
        url: "/api/Project/editcarddesc",
        beforeSend: function (request) {
            request.setRequestHeader("RequestVerificationToken", $('#RequestVerificationToken').val());
        },
        data: JSON.stringify({ cardId: dbId, description: text }),
    });
}

function removeEditLabel()
{
    var dbId = $('#viewCardId').val();
    const name = "#viewCardEditLabel";
    $("#viewCardEditLabelEditor").off();
    $(name).addClass( "d-none" );
    $("#viewCardLabel").removeClass( "d-none" );

    var text = $("#viewCardEditLabelEditor").val();
    if(isBlank(text))
    {
        text = "Card Name";
    }

    var desc = $("#viewCardText").text();
    $("#viewCardLabel").text(text);
    $(`#viewCardName_${dbId}`).text(text);
    $(`#viewCardName_${dbId}`).attr("onclick",`viewCardButton('${dbId}', '${desc}', '${text}')`);

    $.ajax({
        type: "POST",
        dataType: "json",
        contentType: "application/json",
        url: "/api/Project/editcardname",
        beforeSend: function (request) {
            request.setRequestHeader("RequestVerificationToken", $('#RequestVerificationToken').val());
        },
        data: JSON.stringify({ cardId: dbId, name: text }),
    });
}
</script>

@* Plan Suite Project Index Ads *@
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-1119258824927173"
     data-ad-slot="2594414105"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>

<h1 class="text-center">@Model.Project.Name</h1>
<hr />
<h4 class="text-muted">@Model.Project.Description</h4>
<p class="text-muted"><strong>Project Created:</strong> @Model.Project.CreatedDate<br /><strong>Project Due Date:</strong>
    @if(Model.Project.DueDate != null)
    {
         @Model.Project.DueDate
    }
    else 
    {
        <text>N/A</text>
    }
</p>

@* Add Column *@
<div class="modal fade" id="addColumnModal" tabindex="-1" aria-labelledby="addColumnLabel" aria-hidden="true">
    <div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
        <h5 class="modal-title" id="editProjectLabel"><strong>Add Column:</strong> Name Here</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form method="post" asp-controller="Project" asp-action="AddColumn">
            @Html.HiddenFor(model => model.AddColumn.ProjectId)
            <div class="modal-body">
                <div class="form-floating">
                    @Html.EditorFor(model => model.AddColumn.Name, new { htmlAttributes = new { @class = "form-control", id = "editProjName" } })
                    @Html.LabelFor(model => model.AddColumn.Name, new { htmlAttributes = new { @class = "form-label" } })
                    @Html.ValidationMessageFor(model => model.AddColumn.Name, "", new { @class = "text-danger" })
                    <br>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn ps-btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn ps-btn-primary">Save Column</button>
                </div>
            </div>
        </form>
    </div>
    </div>
</div>

@* View Card *@
<div class="modal fade" id="viewCardModal" tabindex="-1" aria-labelledby="viewCardLabel" aria-hidden="true">
    <div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
        <input type="hidden" id="viewCardId" value="0"/>
        <h5 class="modal-title" id="viewCardLabel" onclick="editName()">Card Name</h5>
        <div class="d-none" id="viewCardEditLabel">
            <div class="form-floating">
                <input class="form-control text-box single-line" id="viewCardEditLabelEditor" type="text" value=""/>
                <label class="form-label">Card Name</label>
            </div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
            <div class="modal-body">
                <p class="text-muted" id="viewCardText" onclick="editDescription()">@defaultCardDesc</p>
                <div class="d-none" id="viewCardEditText">
                    <div class="form-floating">
                        <input class="form-control text-box single-line" id="viewCardEditTextEditor" type="text" value=""/>
                        <label class="form-label">Description</label>
                    </div>
                </div>
                <br>
                <div class="modal-footer">
                    <button type="button" class="btn ps-btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
    </div>
    </div>
</div>

<div class="row">
    <div class="col col-sm-10">
        <button type="button" class="btn ps-btn-success float-start" data-bs-toggle="modal" data-bs-target="#addColumnModal" onclick="addColumnBtn('@Model.Project.Id')">Add Column</button>
    </div>
</div>

<div class="row">
    @if(columnCount > 0)
    {
        foreach(var item in Model.Columns)
        {
            <div class="col m4">
                <h3 style="text-align:center;"><button class="btn btn-light" type="button"> <i class="fas fa-arrow-left"></i> </button> <span onclick="onClickColumnTitle">@item.Title</span> <button class="btn btn-light" type="button">@Html.Encode("->")</button></h3>
                <div class="column" style="min-height: 600px;" id="@item.Id">
                    @foreach(var card in Model.Cards)
                    {
                        if(card.ColumnId == item.Id)
                        {
                            <div class="card draggable" id="@card.Id">
                                <div class="card-body">
                                    <div class="d-grid gap-2">
                                        <a class="btn btn-light btn-outline-dark" href="#" id="viewCardName_@card.Id" data-bs-toggle="modal" data-bs-target="#viewCardModal" onclick="viewCardButton('@card.Id', '@card.CardDescription', '@card.CardName')">@card.CardName</a>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    <div class="card">
                        <div class="card-body">
                            <div class="d-grid gap-2">
                                <a class="btn btn-outline-dark" href="#" onclick="addNewCard('@item.Id')">Add Card</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col m4">
            <p class="text-muted text-center m-1">No columns on this project, select <a class="link-primary" href="#" data-bs-toggle="modal" data-bs-target="#addColumnModal">Add Column</a> to add one.</p>
        </div>
    }

    <div class="card d-none" id="createCardDiv">
        <div class="card-body">
            <div class="d-grid gap-2">
                <div class="btn btn-outline-dark">
                    <form method="post" asp-controller="Project" asp-action="addcard">
                        @Html.HiddenFor(model => model.AddCard.ColumnId)
                        @Html.HiddenFor(model => model.AddCard.ProjectId)
                        <div class="row">
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.AddCard.Name, new { htmlAttributes = new { @class = "form-control form-control-sm", id = "cardNameField", placeholder = "Card Name" } })
                            </div>
                            <div class="col-sm-2">
                                <button type="submit" class="btn ps-btn-primary btn-sm">Submit</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function onClickColumnTitle(dbId)
{
    
}

function editName()
{
    var dbid = $('#viewCardId').val();
    var currentName = $('#viewCardLabel').text();
    console.log(currentName);
    $('#viewCardLabel').addClass("d-none");
    $('#viewCardEditLabel').removeClass("d-none");

    $('#viewCardEditLabelEditor').val(currentName);
    $('#viewCardEditLabelEditor').focus();
    $('#viewCardEditLabelEditor').on("focusout", removeEditLabel);
}

function editDescription()
{
    var dbid = $('#viewCardId').val();
    $('#viewCardText').addClass("d-none");
    $('#viewCardEditText').removeClass("d-none");

    $('#viewCardEditTextEditor').focus();
    $('#viewCardEditTextEditor').on("focusout", removeEditForm);
}

function viewCardButton(dbId, desc, name)
{
    $('#viewCardLabel').text(name);
    if(isBlank(desc))
    {
        desc = "@defaultCardDesc";
    }
    $('#viewCardText').text(Markdown.Parse(@defaultCardDesc));
    $('#viewCardId').val(dbId);
}

function addNewCard(id)
{
    const name = "#createCardDiv";

    removeCard();

    $(name).detach().appendTo(`#${id}`);
    $(name).removeClass("d-none");

    $('#AddCard_ColumnId').val(id);
    $('#AddCard_ProjectId').val('@Model.Project.Id');
    $('#cardNameField').focus();

    $('#createCardDiv').on("focusout", removeCard);
}

function addColumnBtn(dbId)
{
    document.getElementById('AddColumn_ProjectId').value = dbId;
}
</script>