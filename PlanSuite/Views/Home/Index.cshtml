@using Microsoft.AspNetCore.Identity
@using System.Text.Json
@using PlanSuite.Models.Persistent
@inject SignInManager<ApplicationUser> SignInManager
@model PlanSuite.Models.Temporary.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
    int count = Model.Projects.Count;
}

@functions{
    string FormatDate(DateTime? value) => value.HasValue ? value.Value.ToString("dd/MMM/yyyy") : "N/A";
}

@if (SignInManager.IsSignedIn(User))
{
    <div class="text-center">
        <h1 class="display-4">Your Projects</h1>
        @* Button trigger modal *@
        <button type="button" class="btn ps-btn-primary" data-bs-toggle="modal" data-bs-target="#createProjectModal">Create New Project</button>

        @* Create New Project *@
        <div class="modal fade" id="createProjectModal" tabindex="-1" aria-labelledby="createProjectLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="createProjectLabel">Create New Project</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
                <form method="post" asp-controller="Home" asp-action="Create">
                    <div class="modal-body">
                        <div class="form-floating">
                            @Html.EditorFor(model => model.CreateProject.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.CreateProject.Name, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.CreateProject.Name, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-floating">
                            @Html.EditorFor(model => model.CreateProject.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.CreateProject.Description, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.CreateProject.Description, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-floating">
                            @Html.EditorFor(model => model.CreateProject.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.CreateProject.DueDate, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.CreateProject.DueDate, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn ps-btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn ps-btn-primary">Create Project</button>
                        </div>
                    </div>
                </form>
            </div>
          </div>
        </div>

        @* Edit Existing Project *@
        <div class="modal fade" id="editProjectModal" tabindex="-1" aria-labelledby="editProjectLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="editProjectLabel"><strong>Edit Project:</strong> Project Name Here</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
                <form method="post" asp-controller="Home" asp-action="Edit">
                    @Html.HiddenFor(model => model.EditProject.Id)
                    <div class="modal-body">
                        <div class="form-floating">
                            @Html.EditorFor(model => model.EditProject.Name, new { htmlAttributes = new { @class = "form-control", id = "editProjName" } })
                            @Html.LabelFor(model => model.EditProject.Name, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.EditProject.Name, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-floating">
                            @Html.EditorFor(model => model.EditProject.Description, new { htmlAttributes = new { @class = "form-control", id = "editProjDesc" } })
                            @Html.LabelFor(model => model.EditProject.Description, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.EditProject.Description, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-floating">
                            @Html.EditorFor(model => model.EditProject.DueDate, new { htmlAttributes = new { @class = "form-control", id = "editProjDate" } })
                            @Html.LabelFor(model => model.EditProject.DueDate, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.EditProject.DueDate, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn ps-btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn ps-btn-primary">Save Changes</button>
                        </div>
                    </div>
                </form>
            </div>
          </div>
        </div>

        @* Delete Existing Project *@
        <div class="modal fade" id="deleteProjectModal" tabindex="-1" aria-labelledby="deleteProjectLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="deleteProjectLabel"><strong>Delete Project:</strong> Project Name Here</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
                <form method="post" asp-controller="Home" asp-action="Delete">
                    @Html.HiddenFor(model => model.DeleteProject.Id)
                    @Html.HiddenFor(model => model.DeleteProject.Name)
                    <div class="modal-body">
                        <div class="form-floating">
                            @Html.EditorFor(model => model.DeleteProject.Name, new { htmlAttributes = new { @class = "form-control", id = "confirmDeleteProjName", onkeyup="onDeleteInput()" } })
                            @Html.LabelFor(model => model.DeleteProject.Name, "Enter the project name in order to be able to delete it", new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.DeleteProject.Name, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn ps-btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn ps-btn-danger" id="deleteButton" disabled>Delete Project</button>
                        </div>
                    </div>
                </form>
            </div>
          </div>
        </div>

        @if(count > 0)
        {
            foreach(var item in Model.Projects)
            {
                <div class="card p-1" style="width: 18rem;">
                    <div>
                        <h5 class="card-title m-1">@item.Name</h5>
                        <h6 class="card-subtitle m-1 mb-2 text-muted"><strong>Created Date:</strong> @FormatDate(item.CreatedDate)<br /><strong>Due Date:</strong> @FormatDate(item.DueDate)</h6>
                        <p class="card-text m-1">@item.Description</p>
                        <a asp-controller="Project" asp-action="Index" asp-route-id="@item.Id" class="btn ps-btn-primary m-1 mb-1">View Project</a>
                        <button type="button" class="btn ps-btn-secondary m-1 mb-1" data-bs-toggle="modal" data-bs-target="#editProjectModal" onclick="passButtonInfo('@item.Id', '@item.Name', '@item.Description', '@item.DueDate?.ToUniversalTime()')">Edit Project</button>
                        <button type="button" class="btn ps-btn-danger m-1 mb-1" data-bs-toggle="modal" data-bs-target="#deleteProjectModal" onclick="passDeleteButtonInfo('@item.Id', '@item.Name')">Delete Project</button>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No projects</p>
        }
    </div>
}
else
{
    <h1 class="text-center">Plan better, stay focused</h1>
}
<script>
function passButtonInfo(dbId, name, desc, date)
{
    document.getElementById('editProjectLabel').innerHTML = `<strong>Edit:</strong> ${name}`;
    document.getElementById('editProjName').value = name;
    document.getElementById('editProjDesc').value = desc;
    document.getElementById('editProjDate').value = date; // i have no fking clue how to get this working :(
    document.getElementById('EditProject_Id').value = dbId;
}

function passDeleteButtonInfo(dbId, name)
{
    document.getElementById('deleteProjectLabel').innerHTML = `<strong>Delete:</strong> ${name}`;
    document.getElementById('DeleteProject_Name').value = name;
    document.getElementById('DeleteProject_Id').value = dbId;
}

function onDeleteInput()
{
    const button = document.getElementById('deleteButton');
    const projName = document.getElementById('DeleteProject_Name').value;
    if(document.getElementById('confirmDeleteProjName').value == projName)
    {
        button.disabled = false;
    }
    else
    {
        button.disabled = true;
    }
}
</script>