@using Microsoft.AspNetCore.Identity
@using System.Text.Json
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@using PlanSuite.Models.Persistent
@using PlanSuite.Services
@using System.Security.Claims
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@model PlanSuite.Models.Temporary.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
    int count = Model.OwnedProjects.Count;

    ApplicationUser user = await UserManager.GetUserAsync(User);
}

@functions{
    string FormatDate(DateTime? value) => value.HasValue ? value.Value.ToString("dd/MMM/yyyy") : "N/A";
}

<environment include="Development">
<script type="module" src="~/js/home/index.js" asp-append-version="true"></script>
</environment>
<environment exclude="Development">
<script type="module" src="~/bundles/home.min.js" asp-append-version="true"></script>
</environment>

@if (SignInManager.IsSignedIn(User))
{
    <div class="text-center">
        <h1 class="display-4">@Model.Localisation.Get(user, "YOUR_PROJECTS")</h1>
        @* Button trigger modal *@
        <button type="button" class="btn ps-btn-primary" data-bs-toggle="modal" data-bs-target="#createProjectModal">@Model.Localisation.Get(user, "CREATE_NEW_PROJECT")</button>

        @* Create New Project *@
        <div class="modal fade" id="createProjectModal" tabindex="-1" aria-labelledby="createProjectLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="createProjectLabel">@Model.Localisation.Get(user, "CREATE_NEW_PROJECT")</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
                <form method="post" asp-controller="Home" asp-action="Create">
                    <div class="modal-body">
                        <div class="form-floating">
                            @Html.EditorFor(model => model.CreateProject.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.CreateProject.Name, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.CreateProject.Name, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-floating">
                            @Html.EditorFor(model => model.CreateProject.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.CreateProject.Description, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.CreateProject.Description, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-floating">
                            @Html.EditorFor(model => model.CreateProject.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.CreateProject.DueDate, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.CreateProject.DueDate, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn ps-btn-secondary" data-bs-dismiss="modal">@Model.Localisation.Get(user, "CLOSE")</button>
                            <button type="submit" class="btn ps-btn-primary">@Model.Localisation.Get(user, "CREATE_PROJECT")</button>
                        </div>
                    </div>
                </form>
            </div>
          </div>
        </div>

        @* Edit Existing Project *@
        <div class="modal fade" id="editProjectModal" tabindex="-1" aria-labelledby="editProjectLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="editProjectLabel">EDIT_PROJECT</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
                <form method="post" asp-controller="Home" asp-action="Edit">
                    @Html.HiddenFor(model => model.EditProject.Id)
                    <div class="modal-body">
                        <div class="form-floating">
                            @Html.EditorFor(model => model.EditProject.Name, new { htmlAttributes = new { @class = "form-control", id = "editProjName" } })
                            @Html.LabelFor(model => model.EditProject.Name, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.EditProject.Name, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-floating">
                            @Html.EditorFor(model => model.EditProject.Description, new { htmlAttributes = new { @class = "form-control", id = "editProjDesc" } })
                            @Html.LabelFor(model => model.EditProject.Description, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.EditProject.Description, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-floating">
                            @Html.EditorFor(model => model.EditProject.DueDate, new { htmlAttributes = new { @class = "form-control", id = "editProjDate" } })
                            @Html.LabelFor(model => model.EditProject.DueDate, new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.EditProject.DueDate, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn ps-btn-secondary" data-bs-dismiss="modal">@Model.Localisation.Get(user, "CLOSE")</button>
                            <button type="submit" class="btn ps-btn-primary">@Model.Localisation.Get(user, "SAVE_CHANGES")</button>
                        </div>
                    </div>
                </form>
            </div>
          </div>
        </div>

        @* Delete Existing Project *@
        <div class="modal fade" id="deleteProjectModal" tabindex="-1" aria-labelledby="deleteProjectLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="deleteProjectLabel">DELETE_PROJECT</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
                <form method="post" asp-controller="Home" asp-action="Delete">
                    @Html.HiddenFor(model => model.DeleteProject.Id)
                    @Html.HiddenFor(model => model.DeleteProject.Name)
                    <div class="modal-body">
                        <div class="form-floating">
                            @Html.EditorFor(model => model.DeleteProject.Name, new { htmlAttributes = new { @class = "form-control", id = "confirmDeleteProjName", onkeyup="onDeleteInput()" } })
                            @Html.LabelFor(model => model.DeleteProject.Name, "Enter the project name in order to be able to delete it", new { htmlAttributes = new { @class = "form-label" } })
                            @Html.ValidationMessageFor(model => model.DeleteProject.Name, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn ps-btn-secondary" data-bs-dismiss="modal">@Model.Localisation.Get(user, "CLOSE")</button>
                            <button type="submit" class="btn ps-btn-danger" id="deleteButton" disabled>@Model.Localisation.Get(user, "DELETE_PROJECT")</button>
                        </div>
                    </div>
                </form>
            </div>
          </div>
        </div>

        <div class="container">
        @if(count > 0)
        {
            <div class="row" id="MyProjects">
            @foreach(var item in Model.OwnedProjects)
            {
                <div class="col-sm-6" id="OwnedProject_@item.Id">
                    <input type="hidden" id="projectId" value="@item.Id"/>
                    <input type="hidden" id="projectName" value="@item.Name"/>
                    <input type="hidden" id="projectDesc" value="@item.Description"/>
                    <input type="hidden" id="projectDate" value="@item.DueDate?.ToUniversalTime()"/>
                    <div class="card p-1 mt-2" style="height:12rem;">
                        <div>
                            <h5 class="card-title m-1">@item.Name</h5>
                            <h6 class="card-subtitle m-1 mb-2 text-muted">@Html.Raw(string.Format(Model.Localisation.Get(user, "PROJECT_SUB_TITLE"), FormatDate(item.CreatedDate), FormatDate(item.DueDate)))</h6>
                            <p class="card-text m-1">@item.Description</p>
                            <a asp-controller="Project" asp-action="Index" asp-route-id="@item.Id" class="btn btn-sm ps-btn-primary m-1 mb-1">@Model.Localisation.Get(user, "VIEW_PROJECT")</a>
                            <button type="button" class="btn btn-sm ps-btn-secondary m-1 mb-1" data-bs-toggle="modal" data-bs-target="#editProjectModal" id="passButtonInfoBtn_@item.Id">@Model.Localisation.Get(user, "EDIT_PROJECT")</button>
                            <button type="button" class="btn btn-sm ps-btn-danger m-1 mb-1" data-bs-toggle="modal" data-bs-target="#deleteProjectModal" id="passDeleteButtonInfoBtn_@item.Id">@Model.Localisation.Get(user, "DELETE_PROJECT")</button>
                        </div>
                    </div>
                </div>
            }
            @foreach(var item in Model.MemberProjects)
            {
                <div class="col-sm-6" id="MemberProject_@item.Id">
                    <div class="card p-1 mt-2" style="height:12rem;">
                        <div>
                            <h5 class="card-title m-1">@item.Name</h5>
                            <h6 class="card-subtitle m-1 mb-2 text-muted">@Html.Raw(string.Format(Model.Localisation.Get(user, "PROJECT_SUB_TITLE"), FormatDate(item.CreatedDate), FormatDate(item.DueDate)))</h6>
                            <p class="card-text m-1">@item.Description</p>
                            <a asp-controller="Project" asp-action="Index" asp-route-id="@item.Id" class="btn btn-sm ps-btn-primary m-1 mb-1">@Model.Localisation.Get(user, "VIEW_PROJECT")</a>
                        </div>
                    </div>
                </div>
            }
            </div>
        }
        else
        {
            <p>@Model.Localisation.Get(user, "NO_PROJECTS")</p>
        }
        </div>
    </div>
}
else
{
    <partial name="SubViews/Landing"/>
}